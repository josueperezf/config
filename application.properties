#esta es configuracion global no para un microservicio en especifico NO SE DEBEN COLOCAR ENN NI ACENTOS POR QUE ARROJA ERROR
config.security.oauth.client.id=frontendapp
config.security.oauth.client.secret=12345
config.security.oauth.jwt.key=algun_codigo_secreto_aeiou


#INICIO PARA EL BLOQUE DE CONFIGURACION GLOBAL PARA RABBIT Y zipkin
#zipkin-server es el contenedor docker que creamos para zipkin, antes de crearlo teniamos localhost pero corriendo el archivo zipkin.cmd, cuando esta en contenedor, ya ese archivo no se necesita
#microservicio-rabbitmq311 es otro contenedor docker
#como descargamos de internet e instalamos en este microservicio la dependencia de zipkin para manejar las trazabilidad, debemos agregar lo siguiente
# antes era spring.zipkin.base-url=http://127.0.0.1:9411/ ahora es spring.zipkin.base-url=http://zipkin-server:9411/ , donde zipkin-server es el nombre del contenedor docker que creamos
spring.zipkin.base-url=http://zipkin-server:9411/
#microservicio-rabbitmq311 es el contenedor docker llamado microservicio-rabbitmq311 corriendo,
#importante el nombre rabbitmq311 es porque asi le colocoque, ya que era el rabbitmq.3.11, pero nosotros podemos colocarle otro nombre segun lo que queramos, claro el mismo que le demos en docker, debemos colocarselo aqui tambien despues
spring.rabbitmq.host=microservicio-rabbitmq311
# la siguiente linea es para que zipkin maneje el 100% de las peticiones que reciba el microservicio desde un frontend o desde otro microservicio
spring.sleuth.sampler.probability=1.0
#lo siguiente es porque ademas de zipkin agregamos rabbit para que en vez de enviar la comunicaion entre ellos mediante http lo haga broker
spring.zipkin.sender.type=rabbit
#FIN PARA EL BLOQUE DE CONFIGURACION GLOBAL PARA RABBIT Y zipkin
#CONFIGURACION GLOBAL PARA COMUNICACION CON EL MICROSERVICIO CONFIG SERVER, ES UN STRING QUE SE NECESITA, NADA MAS
#spring.config.import=optional:configserver: