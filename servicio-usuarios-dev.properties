#NO DEBEMOS COLOCAR ACENTOS NI ENNES EN ESTE TIPO DE ARCHIVOS
#agregamos la configuracion de base de datos postgres base de datos java_microservice
# contenedor-postgres15 hace referencia a un contenedor docker que creamos que tiene un postgres instalado, este corre por un puerto diferente al default, asi lo decidi para evitar choque con postgres local que pueda tener,
#antes en el texto donde esta contenedor-postgres15 estaba un localhost, esto se cambio porque se va a subir a un contenedor docker,
#como en docker tenemos un postgres instalado, pues vamos a hacer que se conecte a este contenedor mediante la palabra contenedor-postgres15, ya que asi nombramos al contenedor,
#si queremos listar todos los contenedores de docker podemos escribir en una terminal 'docker container ls -a'
#IMPORTANTE todos los contenedores deben estar levantados para que funcione, especialmente para este servicio, debemos tener levantado a docker, servicio eureka, servicio config y postgres
#En el contenedor de docker de postgres dijimos para acceder a postgres desde un contenedor que tengamos en docker lo podemos hacer desde el puerto 5432, pero para acceder a postgres desde fuera de docker debemos hacerlo desde el puerto 5433 ejemplo
#para acceder al postgres de docker desde FUERA de docker, mediante DbVisualizer lo debemos hacer desde puerto 5433, login root password root, database java_microservice
spring.datasource.url=jdbc:postgresql://contenedor-postgres15:5432/java_microservice
spring.datasource.username=postgres
spring.datasource.password=12345
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.hibernate.ddl-auto=create

logging.level.org.hibernate.SQL=debug

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true