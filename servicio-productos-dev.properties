#agregamos la configuracion de base de datos mysql base de datos java_microservice, allowPublicKeyRetrieval=true es para solucionar posibles errores de key
# coloque el puerto 3307 en vez del puerto 3306 por default, ya que quiero tener una base de datos por docker y poder utilizar la que tengo en xampp
# el localhost:3307 fue reemplazado por 'contenedor-mysql8:3307' ya que contenedor-mysql8 es un contenedor docker que creamos para manejar la base de datos, entonces no se coloca localhost si no el nombre del contenedor docker, claro este contenedor debe existir en el equipo y estar levantado, podemos listar los contenedores ejecutando desde la consola el comando docker ps, o docker ps -a para ver los contenedores asi esten detenidos
spring.datasource.url=jdbc:mysql://contenedor-mysql8:3307/java_microservice?serverTimezone=America/Santiago&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#las siguientes dos lineas son solo para DESARROLLO, NO PARA PRODUCCION, CREATE SOLO CREA LAS TABLAS, create-drop Crea las tablas y al bajar el servicio elimina las tablas, update crea la tabla solo una vez y las tablas se mantienen sin importan que se baje el servicio, hace altertable por si agregamos algun campo
#create y create-drop es solo de desarrollo, update, podria ser para produccion, pero ya depende del programador
spring.jpa.hibernate.ddl-auto=create
logging.level.org.hibernate.SQL=debug
